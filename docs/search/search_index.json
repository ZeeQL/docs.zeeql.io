{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ZeeQL Documentation ZeeQL is a Swift ORM / database access library primarily inspired by EOF, and in consequence CoreData, adding some ActiveRecord concepts. The framework is self contained and doesn't have any 3rd party dependencies. It comes with a SQLite3 driver builtin, and APR as well as a standalone PostgreSQL driver as optional modules. The framework can be used in either server side Swift applications or in client applications (iOS or macOS apps). It is not quite there yet, but could potentially serve as a pure Swift CoreData replacement that doesn't just work w/ SQLite3 but with other servers as well. Provides Choices Use raw SQL queries in a typesafe way: try adaptor.select(\"SELECT name, count FROM pets\") { ( name: String, count: Int) in print(\"\\(name): #\\(count)\") } Use full object fetches, and prefetch relationships: let objects = try datasource.fetchObjects( Person .where(Person.e.login.like(\"he*\")) .limit(10) .prefetch(Person.e.addresses) .order(by: Person.e.login) ) Or partial object fetches, which still provide most of the neat stuff while avoiding fetching full objects all the time: let partials = try db .select(Person.e.firstname, from: Persons.self) .where(Person.e.login.like(\"he*\")) .order(by: Person.e.login) ) Declare your models in neat code (either typesafe, or by using names), or fetch them from the database information schema, or design them with the Xcode CoreData modeler. WORK IN PROGRESS, STAY TUNED ZeeQL is still being prepared. Please stay tuned for the release. If you want to stay up to date, subscribe to the ZeeQL Blog .","title":"Introduction"},{"location":"#zeeql-documentation","text":"ZeeQL is a Swift ORM / database access library primarily inspired by EOF, and in consequence CoreData, adding some ActiveRecord concepts. The framework is self contained and doesn't have any 3rd party dependencies. It comes with a SQLite3 driver builtin, and APR as well as a standalone PostgreSQL driver as optional modules. The framework can be used in either server side Swift applications or in client applications (iOS or macOS apps). It is not quite there yet, but could potentially serve as a pure Swift CoreData replacement that doesn't just work w/ SQLite3 but with other servers as well.","title":"ZeeQL Documentation"},{"location":"#provides-choices","text":"Use raw SQL queries in a typesafe way: try adaptor.select(\"SELECT name, count FROM pets\") { ( name: String, count: Int) in print(\"\\(name): #\\(count)\") } Use full object fetches, and prefetch relationships: let objects = try datasource.fetchObjects( Person .where(Person.e.login.like(\"he*\")) .limit(10) .prefetch(Person.e.addresses) .order(by: Person.e.login) ) Or partial object fetches, which still provide most of the neat stuff while avoiding fetching full objects all the time: let partials = try db .select(Person.e.firstname, from: Persons.self) .where(Person.e.login.like(\"he*\")) .order(by: Person.e.login) ) Declare your models in neat code (either typesafe, or by using names), or fetch them from the database information schema, or design them with the Xcode CoreData modeler.","title":"Provides Choices"},{"location":"#work-in-progress-stay-tuned","text":"ZeeQL is still being prepared. Please stay tuned for the release. If you want to stay up to date, subscribe to the ZeeQL Blog .","title":"WORK IN PROGRESS, STAY TUNED"},{"location":"about/","text":"Contact Hey, we love feedback. Join the mailing list, Slack channel or just drop us an email to tell us why this is crap (or not?). Mailing List Slack info@zeeql.io MkDocs Built with MkDocs using a theme provided by Read the Docs . Who ZeeQL is brought to you by the ZeeZide GmbH. Imprint .","title":"About"},{"location":"about/#contact","text":"Hey, we love feedback. Join the mailing list, Slack channel or just drop us an email to tell us why this is crap (or not?). Mailing List Slack info@zeeql.io","title":"Contact"},{"location":"about/#mkdocs","text":"Built with MkDocs using a theme provided by Read the Docs .","title":"MkDocs"},{"location":"about/#who","text":"ZeeQL is brought to you by the ZeeZide GmbH. Imprint .","title":"Who"}]}